<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chrome on Wsine&#39;s blog</title>
    <link>https://blog.wsine.top/tags/chrome/</link>
    <description>Recent content in Chrome on Wsine&#39;s blog</description>
    <image>
      <url>https://blog.wsine.top/author.jpg</url>
      <link>https://blog.wsine.top/author.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2019-Now &amp;middot; CC [BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
    <lastBuildDate>Sun, 24 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.wsine.top/tags/chrome/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chrome在Windows找回熟悉的Alt &#43; Num切换标签页</title>
      <link>https://blog.wsine.top/posts/alt-num-switch-tab-in-chrome-on-windows/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wsine.top/posts/alt-num-switch-tab-in-chrome-on-windows/</guid>
      <description>&lt;p&gt;在不同的系统和软件中，我都喜欢尽可能用同一套快捷键方案去完成相同的功能，以减少自己的学习和记忆成本，最大化效率。但是，哪怕是同一个应用，由于不同平台的默认快捷键不一样，频繁切换平台的迁移学习也很辛苦。&lt;/p&gt;
&lt;p&gt;比如 Chrome 浏览器中，切换标签页的方式在不同的平台上不一样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows：Ctrl + Num&lt;/li&gt;
&lt;li&gt;Linux：Alt + Num&lt;/li&gt;
&lt;li&gt;Mac：Cmd + Num&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后两者由于键位所处的位置大致相同，所以哪怕没有记忆也不会造成多大的割裂感。但是，Windows 下面的这套快捷键实在是太难受了，本文就是教你如何找回熟悉的感觉。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://image.wsine.top/FF5B74693EE093B3A0810E93810F336D.png&#34; alt=&#34;FF5B74693EE093B3A0810E93810F336D&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;这里我们需要借助的软件是 Vimium，相信已经有不少文章介绍过它了。在这里我们需要用到它 Custom key mappings 的功能。Vimium 本身提供很多优秀的内建功能。而我们这里需要用到的是 &lt;code&gt;firstTab&lt;/code&gt; 的功能。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://image.wsine.top/72B87484BA371209846EF02C6B381FE9.png&#34; alt=&#34;72B87484BA371209846EF02C6B381FE9&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;你可能会觉得这个功能并不足够完成 &lt;code&gt;Alt + 2&lt;/code&gt;或 &lt;code&gt;Alt + 3&lt;/code&gt; 等映射，其实不然，仔细阅读它的开源代码你会发现它本身还提供 option 的功能，简单点来说配置方案是酱紫的。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://image.wsine.top/939C6CA558E0E7230390D3763ED98731.png&#34; alt=&#34;939C6CA558E0E7230390D3763ED98731&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;这里我把映射也一并附上。我个人只习惯用前面几个固定的标签页，你可以根据自己习惯增减。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;map &amp;lt;a-1&amp;gt; firstTab
map &amp;lt;a-2&amp;gt; firstTab count=2
map &amp;lt;a-3&amp;gt; firstTab count=3
map &amp;lt;a-4&amp;gt; firstTab count=4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有了这套方案，我可以很容易的快速回到长期放在第一个标签的 Gmail 页面或者从 Jupyter Notebook 的编程页面中跳出去快速搜索一些东西，而不用借助鼠标，从而提高效率。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
