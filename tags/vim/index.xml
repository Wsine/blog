<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Wsine&#39;s blog</title>
    <link>https://blog.wsine.top/tags/vim/</link>
    <description>Recent content in Vim on Wsine&#39;s blog</description>
    <image>
      <url>https://blog.wsine.top/author.jpg</url>
      <link>https://blog.wsine.top/author.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2019-Now &amp;middot; CC [BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
    <lastBuildDate>Tue, 23 Jul 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.wsine.top/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的Vim配置</title>
      <link>https://blog.wsine.top/posts/my-vim-configuration/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.wsine.top/posts/my-vim-configuration/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;h4 id=&#34;为什么选择vim&#34;&gt;为什么选择vim？&lt;/h4&gt;
&lt;p&gt;曾经我也是一个小白，使用Dev-C++来学习C++语言，使用Visual Studio开发工程，它们都被称为IDE(Integrated development environment)。但是，逐渐的，我渐渐意识到，你只能遵循它制定的一系列的流程来开发程序，自定义程度不高，而且大型的IDE消耗计算资源严重。&lt;/p&gt;
&lt;p&gt;后来，我认识到了编辑和编译应该是一个分开的过程，便转战到了文本编辑器，选择Sublime Text。Sublime优秀的UI界面，优秀的快捷键，拥有插件系统，着实让我着迷。它的初始环境便可直接上手，它的默认配色Monokai让人看得很舒服。&lt;/p&gt;
&lt;p&gt;但是，离开Sublime选择Vim的原因有三点，一是Sublime依赖于图形化界面，二是Sublime移动光标需要移动右手使用方向键，三是Sublime编辑远程文件要么借助工具要么经常传输。至此，我终于理解了那个古老的梗。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;世界上只有三种程序员，一种是使用Vim的，一种是使用Emacs的，还有一种是其他&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而这篇博文也是放置于效率分类下&lt;/p&gt;
&lt;p&gt;*加个小彩蛋：*我实验室的Boss爱用Emacs，我们互视为异教徒，我说“你的手指会变形的”，他说“程序员谁的手指不变形”，我“&amp;hellip;&amp;hellip;[冷漠]”&lt;/p&gt;
&lt;h4 id=&#34;如何学习vim&#34;&gt;如何学习Vim&lt;/h4&gt;
&lt;p&gt;我的观点是，自己一行一行写自己的配置文件才会深入学会Vim。如果一开始就用配置好的，那和直接使用IDE没有太大的差别。知道配置文件每一行干了些什么，不懂就搜，想加功能想改功能就动手，最后这就是一份&lt;strong&gt;你的配置文件&lt;/strong&gt;。相信每个Vim大牛都是这样做的。同样的，我的Vim配置也会不断更新，可能会持续n年也不一定。而这也是为什么我的文章标题起名如此。&lt;/p&gt;
&lt;h2 id=&#34;原则&#34;&gt;原则&lt;/h2&gt;
&lt;p&gt;我的Vim配置有一定的原则，遵循原则才会让配置不会超出自己的控制&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;插件能用轻量级的就不用复杂的&lt;/li&gt;
&lt;li&gt;非需要的功能不会添加&lt;/li&gt;
&lt;li&gt;尽量消耗更少的资源&lt;/li&gt;
&lt;li&gt;配色一定不能忍&lt;/li&gt;
&lt;li&gt;尽可能的做到一键配置&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;正文&#34;&gt;正文&lt;/h2&gt;
&lt;h4 id=&#34;配色&#34;&gt;配色&lt;/h4&gt;
&lt;p&gt;说得多还不如先看看总体的配色，配色我采用了vim自带的desert主题，在这个基础上加了一点自定义&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://image.wsine.top/468539c3f437335584ebdfa2f8c4aa34.png&#34; alt=&#34;配色图&#34;  /&gt;
&lt;/p&gt;
&lt;p&gt;从左往右说起好了，左侧我添加了一个目录树，使用的是&lt;code&gt;scrooloose/nerdtree&lt;/code&gt;的插件，并且绑定了&lt;code&gt;&amp;lt;leader&amp;gt;q&lt;/code&gt;来启动和隐藏目录树，使用起来还是蛮方便的&lt;/p&gt;
&lt;p&gt;中间的配色我刻意挑了一个黑色的主题。我不喜欢那种惨淡的白色，函数名和命名空间是白色就和变量名看起来没有区分度了，因此搜了好久，找到了&lt;code&gt;octol/vim-cpp-enhanced-highlight&lt;/code&gt;插件能满足这个需求，修改了一下它的颜色。弹出菜单的颜色我也自己修改了。颜色都采用了暗色调的color，确保不会刺眼，同时也能将不同的元素区分出来。&lt;code&gt;set t_Co=256 &amp;quot; Enable status bar color&lt;/code&gt;很重要。&lt;/p&gt;
&lt;p&gt;顶部和底部采用的是比较出名的&lt;code&gt;vim-airline/vim-airline&lt;/code&gt;插件，以及其相应的&lt;code&gt;vim-airline/vim-airline-themes&lt;/code&gt;，主题我选择了&lt;code&gt;let g:airline_theme=&#39;luna&#39;&lt;/code&gt;，并且启用了powerline字体，也就是你能看到的三角形符号&lt;/p&gt;
&lt;p&gt;因为还在不断的修改中，未来可能会考虑把配色做成插件易于安装吧，目前的安装方式比较麻烦&lt;/p&gt;
&lt;h4 id=&#34;管理&#34;&gt;管理&lt;/h4&gt;
&lt;p&gt;插件管理上我选用了Vundle，目前一款比较流行的Vim插件管理器，基本上我只使用github上的vim插件&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://image.wsine.top/fe535df15cf240c8bc5474da7fcf1b28.png&#34; alt=&#34;插件列表&#34;  /&gt;
&lt;/p&gt;
&lt;h4 id=&#34;按键&#34;&gt;按键&lt;/h4&gt;
&lt;p&gt;一直以来我对于那种秀配置不讲按键绑定的文章比较反感，除非你一个键都没改&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;模式&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;按键&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;映射&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;全局&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;,&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;leader&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;leader键是vim中的一个特殊键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;j&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;gj&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下一行&lt;/td&gt;
&lt;td&gt;视觉上往下移动(行太长导致分行时)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;k&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;gk&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一行&lt;/td&gt;
&lt;td&gt;视觉上往上移动(行太长导致分行时)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;:w&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速保存&lt;/td&gt;
&lt;td&gt;没有权限保存的时候也是不行的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;&amp;lt;leader&amp;gt;q&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;:bd&amp;lt;CR&amp;gt;:q&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速退出&lt;/td&gt;
&lt;td&gt;前提所有buffer都保存了，防止意外&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;:bnext&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到右边的buffer&lt;/td&gt;
&lt;td&gt;仿照Vimuim的标签切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;J&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;:bprevious&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到左边的buffer&lt;/td&gt;
&lt;td&gt;仿照Vimuim的标签切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;&amp;lt;leader&amp;gt;bn&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;:enew&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;新开一个buffer&lt;/td&gt;
&lt;td&gt;buffer new&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;&amp;lt;leader&amp;gt;bd&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;:bd&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;关闭当前buffer&lt;/td&gt;
&lt;td&gt;buffer delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;空格键&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;smooth_scroll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;向下平滑滚动&lt;/td&gt;
&lt;td&gt;避免思维跳跃，仿照Chrome的设定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;减号键&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;smooth_scroll&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;向上平滑滚动&lt;/td&gt;
&lt;td&gt;避免思维跳跃&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;编辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Ctrl + b&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;方向键-左&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;向左移动一个字符&lt;/td&gt;
&lt;td&gt;仿照Bash的控制方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;编辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Ctrl + f&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;方向键-右&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;向右移动一个字符&lt;/td&gt;
&lt;td&gt;仿照Bash的控制方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;编辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Ctrl + e&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Home键&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;跳到行首&lt;/td&gt;
&lt;td&gt;仿照Bash的控制方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;编辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Ctrl + a&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;End键&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;跳到行尾&lt;/td&gt;
&lt;td&gt;仿照Bash的控制方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;编辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Tab键&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;方向键-下&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;选择下一个候选词&lt;/td&gt;
&lt;td&gt;可连续按&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;编辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Esc键&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;Ctrl + 回车&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;清除菜单&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;可视化&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;//&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;y/&amp;lt;C-R&amp;gt;&amp;quot;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;快速搜索&lt;/td&gt;
&lt;td&gt;需要先选择内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其实可以看出我是比较喜欢统一各大软件的按键方式的，主要是可以让自己不用记忆太多，快捷键是效率的主要生产力，所以终端、编辑器、浏览器这三大离不开的软件，我都会尽可能地去统一它们的按键&lt;/p&gt;
&lt;p&gt;上面提到的平滑滚动我使用了&lt;code&gt;lucasicf/vim-smooth-scroll&lt;/code&gt;的插件，其实这个插件来自出名的&lt;code&gt;terryma&lt;/code&gt;之手，但是如果连续平滑滚动，会连续触发导致控制卡死。而&lt;code&gt;lucasicf&lt;/code&gt;修复了这个bug并发送了PR，不知道为什么&lt;code&gt;terryma&lt;/code&gt;大神一直没有理=。=&lt;/p&gt;
&lt;p&gt;还有，我想要仿照Chrome使用Shift + 空格键来平滑向上滚动，然后我尝试了很多种方法，并不能捕获&lt;code&gt;Shift + Space&lt;/code&gt;的状态，如果有大神能做到求教&lt;/p&gt;
&lt;h4 id=&#34;括号匹配&#34;&gt;括号匹配&lt;/h4&gt;
&lt;p&gt;Vim毕竟是写代码的利器，自动补全括号特别实用且重要，这里我简单的使用了一个插件&lt;code&gt;jiangmiao/auto-pairs&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;多光标编辑&#34;&gt;多光标编辑&lt;/h4&gt;
&lt;p&gt;在Sublime中唯一让我留念的就是多光标编辑了，作为被这个装逼大法宠坏的我，没有它感觉断了一臂。多亏了terryma大神将这一功能移植到了vim中，据说，这还是大神在一次航班途中写出来的，我只能打出666并默默地比了一个❤~&lt;/p&gt;
&lt;p&gt;插件名称&lt;code&gt;terryma/vim-multiple-cursors&lt;/code&gt;。在Visual模式下选中所需要改的内容，按Ctrl + n可以选中下一个，然后按下c进入编辑状态，编辑完，Esc，完美&lt;/p&gt;
&lt;h4 id=&#34;快速打开文件&#34;&gt;快速打开文件&lt;/h4&gt;
&lt;p&gt;Sublime还有一个功能是Ctrl + p可以打开文件，这一方式同样也有插件在vim中&lt;code&gt;ctrlpvim/ctrlp.vim&lt;/code&gt;。更重要的是，该插件同样支持模糊搜索。&lt;/p&gt;
&lt;h4 id=&#34;快速注释&#34;&gt;快速注释&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;scrooloose/nerdcommenter&lt;/code&gt;是一个优秀的插件，默认的注释方式是&lt;code&gt;&amp;lt;leader&amp;gt;c&amp;lt;Space&amp;gt;&lt;/code&gt;，可以在注释和非注释直接切换。同时，配合Ctrl + v的块选择，能够快速选中自己想要注释的行，然后&lt;code&gt;&amp;lt;leader&amp;gt;c&amp;lt;Space&amp;gt;&lt;/code&gt;快速批量注释&lt;/p&gt;
&lt;h4 id=&#34;自动补全&#34;&gt;自动补全&lt;/h4&gt;
&lt;p&gt;在自动补全的领域下，最好的无疑是&lt;code&gt;YouCompleteMe&lt;/code&gt;插件了，然而我并没有使用。首先该插件的调用程序太多，消耗资源太多，安装也麻烦，一次安装终身受用这种借口不能作为不简化安装的理由。其次，语义化补全对我来说没有太大的需求，只需要能把变量和函数提示并补全就好了&lt;/p&gt;
&lt;p&gt;而Vim在新版中已经原生添加了自动补全的功能。利用按下Ctrl + x, Ctrl + o触发， Ctrl + n, Ctrl + p选择菜单。但是这样未免太麻烦不优雅，我利用了一款插件&lt;code&gt;vim-scripts/AutoComplPop&lt;/code&gt;，它能够自动弹出补全菜单，使用起来效果还不错。不过它偶尔有一些小bug，我自己还能忍，如果你不喜欢再寻求一款更好的自动补全吧&lt;/p&gt;
&lt;h4 id=&#34;格式控制&#34;&gt;格式控制&lt;/h4&gt;
&lt;p&gt;在格式控制的范畴下，我将制表符都转义成了空格，并且在保存的时候自动把行尾的空格都去掉了，这是符合优秀编码规范的格式，希望还是能保持。&lt;/p&gt;
&lt;p&gt;有一点，很多人没注意到的，Git管理的文件建议保留文件末尾的一个空行，特意提一下，我没有加入到vim自动添加空行，因为不是所有的文件都被Git管理，无端的空行可能会导致一些未知的错误。所有建议手动添加。&lt;/p&gt;
&lt;h4 id=&#34;其他&#34;&gt;其他&lt;/h4&gt;
&lt;p&gt;假设你都理解了vim的基础操作，其他的一些配置我也有相应的注释，参考了http://amix.dk/vim/vimrc.html，不愧是被誉为教科书般的vim配置，真是优秀。&lt;/p&gt;
&lt;p&gt;阅读.vimrc文件，能开拓你很多的思路，希望能找到你喜欢的&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;参照https://github.com/VundleVim/Vundle.vim，下载Vundle管理器到指定目录&lt;/p&gt;
&lt;p&gt;将对应的文件放置在你的家目录&lt;code&gt;~&lt;/code&gt;下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;~
├── .vimrc
└── .vim
     ├── bundle
     │   └── Vundle.vim
     └── colors
         └── desert.vim
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Wsine/Backup/blob/master/vim/.vimrc&#34;&gt;.vimrc文件下载&lt;/a&gt;
&lt;a href=&#34;https://github.com/Wsine/Backup/blob/master/vim/desert.vim&#34;&gt;desert.vim文件下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开Vim，使用&lt;code&gt;:PluginInstall&lt;/code&gt;即可&lt;/p&gt;
&lt;h2 id=&#34;配置文件&#34;&gt;配置文件&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Vundle
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
set nocompatible              &amp;quot; be iMproved, required
filetype off                  &amp;quot; required

&amp;quot; set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

&amp;quot; let Vundle manage Vundle, required
Plugin &#39;VundleVim/Vundle.vim&#39;

Plugin &#39;jiangmiao/auto-pairs&#39;
Plugin &#39;scrooloose/nerdtree&#39;
Plugin &#39;ctrlpvim/ctrlp.vim&#39;
&amp;quot; Plugin &#39;terryma/vim-smooth-scroll&#39;
Plugin &#39;lucasicf/vim-smooth-scroll&#39;
Plugin &#39;vim-scripts/AutoComplPop&#39;
Plugin &#39;terryma/vim-multiple-cursors&#39;
Plugin &#39;scrooloose/nerdcommenter&#39;
Plugin &#39;vim-airline/vim-airline&#39;
Plugin &#39;vim-airline/vim-airline-themes&#39;
Plugin &#39;octol/vim-cpp-enhanced-highlight&#39;
Plugin &#39;vim-python/python-syntax&#39;
&amp;quot; All of your Plugins must be added before the following line
call vundle#end()            &amp;quot; required
filetype plugin indent on    &amp;quot; required
&amp;quot; Put your non-Plugin stuff after this line

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; General
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Sets how many lines of history VIM has to remember
set history=700

&amp;quot; Set to auto read when a file is changed from the outside
set autoread

&amp;quot; ignore case when searching unless exists one upper case
set ignorecase
set smartcase

&amp;quot; Realtime searching
set incsearch

&amp;quot; hight light searching
set hlsearch

&amp;quot; No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; VIM user interface
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Set 7 lines to the cursor - when moving vertically using j/k
set so=7

&amp;quot; Turn on the WiLd menu
set wildmenu

&amp;quot; Ignore compiled files
set wildignore=*.o,*~,*.pyc

&amp;quot;Always show number
set number

&amp;quot;Always show current position
set ruler

&amp;quot; Height of the command bar
set cmdheight=2

&amp;quot; A buffer becomes hidden when it is abandoned
set hid

&amp;quot; Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=&amp;lt;,&amp;gt;,h,l

&amp;quot; Set cmd show
set showcmd

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Colors and Fonts
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Enable syntax highlighting
syntax enable

&amp;quot; Set colorscheme
set background=dark
colorscheme desert

&amp;quot; Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

&amp;quot; Use Unix as the standard file type
set ffs=unix,dos,mac

&amp;quot; Enable status bar color
set t_Co=256

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Files, backups and undo
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowb
set noswapfile

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Text, tab and indent related
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Use spaces instead of tabs
set expandtab

&amp;quot; Be smart when using tabs ;)
set smarttab

&amp;quot; 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

&amp;quot; Linebreak on 500 characters
set lbr
set tw=500

&amp;quot; Intelligence indent
set ai &amp;quot;Auto indent
set si &amp;quot;Smart indent
set wrap &amp;quot;Wrap lines

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Moving around, tabs, windows and buffers
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line(&amp;quot;&#39;\&amp;quot;&amp;quot;) &amp;gt; 0 &amp;amp;&amp;amp; line(&amp;quot;&#39;\&amp;quot;&amp;quot;) &amp;lt;= line(&amp;quot;$&amp;quot;) |
     \   exe &amp;quot;normal! g`\&amp;quot;&amp;quot; |
     \ endif
&amp;quot; Remember info about open buffers on close
set viminfo^=%

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Status line
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Always show the status line
set laststatus=2

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Editing mappings
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; With a map leader it&#39;s possible to do extra key combinations
&amp;quot; like &amp;lt;leader&amp;gt;w saves the current file
let mapleader = &amp;quot;,&amp;quot;
let g:mapleader = &amp;quot;,&amp;quot;

&amp;quot; Toggle paste mode
set pastetoggle=&amp;lt;leader&amp;gt;p

&amp;quot; Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

&amp;quot; Fast saving
nmap &amp;lt;leader&amp;gt;w :w&amp;lt;CR&amp;gt;

&amp;quot; Fast quit
nmap &amp;lt;leader&amp;gt;q :bufdo bd&amp;lt;CR&amp;gt;:q&amp;lt;CR&amp;gt;

&amp;quot; Fast open file tree
map &amp;lt;leader&amp;gt;t :NERDTreeToggle&amp;lt;CR&amp;gt;

&amp;quot; Fast Tab use
noremap &amp;lt;silent&amp;gt; K :bnext&amp;lt;CR&amp;gt;
noremap &amp;lt;silent&amp;gt; J :bprevious&amp;lt;CR&amp;gt;
noremap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;bn :enew&amp;lt;CR&amp;gt;
noremap &amp;lt;silent&amp;gt; &amp;lt;expr&amp;gt; &amp;lt;leader&amp;gt;bd
    \ len(filter(range(1, bufnr(&#39;$&#39;)), &#39;buflisted(v:val)&#39;)) &amp;gt;= 2 ?
    \ &amp;quot;:bp\|bd #&amp;lt;CR&amp;gt;&amp;quot; : &amp;quot;:bd&amp;lt;CR&amp;gt;&amp;quot;

&amp;quot; Smooth page scroll
nnoremap &amp;lt;silent&amp;gt; = :call smooth_scroll#down(&amp;amp;scroll, 25, 2)&amp;lt;CR&amp;gt;
nnoremap &amp;lt;silent&amp;gt; - :call smooth_scroll#up(&amp;amp;scroll, 25, 2)&amp;lt;CR&amp;gt;
nnoremap &amp;lt;silent&amp;gt; &amp;lt;Space&amp;gt; :call smooth_scroll#down(&amp;amp;scroll, 25, 2)&amp;lt;CR&amp;gt;

&amp;quot; Move in insert mode
imap &amp;lt;C-b&amp;gt; &amp;lt;Left&amp;gt;
imap &amp;lt;C-f&amp;gt; &amp;lt;Right&amp;gt;
imap &amp;lt;C-e&amp;gt; &amp;lt;End&amp;gt;
imap &amp;lt;C-a&amp;gt; &amp;lt;Home&amp;gt;
imap &amp;lt;M-f&amp;gt; &amp;lt;C-o&amp;gt;w
imap &amp;lt;M-b&amp;gt; &amp;lt;C-o&amp;gt;b

&amp;quot; Clear highlight color
nnoremap &amp;lt;Esc&amp;gt; :noh&amp;lt;Return&amp;gt;&amp;lt;Esc&amp;gt;
nnoremap &amp;lt;Esc&amp;gt;^[ &amp;lt;Esc&amp;gt;^[

&amp;quot; Popup menu select
inoremap &amp;lt;silent&amp;gt; &amp;lt;expr&amp;gt; &amp;lt;Tab&amp;gt; pumvisible() ? &amp;quot;\&amp;lt;Down&amp;gt;&amp;quot; : &amp;quot;\&amp;lt;Tab&amp;gt;&amp;quot;
inoremap &amp;lt;silent&amp;gt; &amp;lt;expr&amp;gt; &amp;lt;ESC&amp;gt; pumvisible() ? &amp;quot;\&amp;lt;C-E&amp;gt;&amp;quot; : &amp;quot;\&amp;lt;ESC&amp;gt;&amp;quot;

&amp;quot; Visual Mode Search
vnoremap // y/&amp;lt;C-R&amp;gt;&amp;quot;&amp;lt;CR&amp;gt;

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Function, Command
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Delete trailing white space on save, useful for Python and CoffeeScript ;)
func! DeleteTrailingWS()
    exe &amp;quot;normal mz&amp;quot;
    %s/\s\+$//ge
    exe &amp;quot;normal `z&amp;quot;
endfunc
autocmd BufWrite * :call DeleteTrailingWS()

&amp;quot; Auto open file tree if enter a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 &amp;amp;&amp;amp; isdirectory(argv()[0]) &amp;amp;&amp;amp; !exists(&amp;quot;s:std_in&amp;quot;) | exe &#39;NERDTree&#39; argv()[0] | wincmd p | ene | endif

&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; =&amp;gt; Plugin Setting
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; NERDcommenter
let g:NERDSpaceDelims=1
let g:NERDCommentEmptyLines=1
let g:NERDDefaultAlign=&#39;left&#39;

&amp;quot; Vim Airline themes
let g:airline_theme=&#39;luna&#39;
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1

&amp;quot; Vim Cpp Highlight
let g:cpp_class_scope_highlight=1
let g:cpp_member_variable_highlight=1
let g:cpp_experimental_simple_template_highlight=1
let g:cpp_concepts_highlight=1

&amp;quot; Vim Python Highlight
let python_highlight_all=1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
