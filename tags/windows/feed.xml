<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows on Wsine's blog</title><link>https://blog.wsine.top/tags/windows/</link><description>Recent content in Windows on Wsine's blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 02 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.wsine.top/tags/windows/feed.xml" rel="self" type="application/rss+xml"/><item><title>Windows平台下的少数派新写稿流程</title><link>https://blog.wsine.top/posts/writting-for-sspai-on-windows/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.wsine.top/posts/writting-for-sspai-on-windows/</guid><description>谈及写作，不少的用户都是使用 Mac 平台配合多样的 App 完成从写稿到发布的一条龙服务。但是在 Windows 平台上，往往需要很多手动的过程。比如，在少数派平台上，官方提供了专用的接口给 MWeb App 完成从写稿、插图、发布的完善服务，但是 MWeb App 仅在 Mac 平台上提供，Windows 用户常常因为插图图床问题困扰。
最近，随着两大写作好伴侣 App 的更新，这一情况得以改善。PicGo 迎来了 v2.0 版本的大更新，剥离了核心功能同时支持 CLI 调用和 API 调用。Typora 集成了 PicGo 并提供一键上传图片服务。如果需要更详细的资料，请看这两篇文章：
图床「神器」PicGo v2.0更新，插件系统终于来了
Typora 支持自定义图片上传服务了
配合上述两大神器，是否有方法能够改善少数派平台上的写作流程，下面我就来谈谈我的方案。
Typora 之功能增强 首先，从 Typora 官网上能够下载 Win / Linux / OSX 对应平台的安装文件并正确安装。
然后，我们需要启用图片上传功能。点击 File -&amp;gt; Preferences -&amp;gt; Image，在 Image Upload Setting 那栏，选择 PicGo-Core (command line) ，然后点击 Download and Upgrade，即可完成安装。
PicGo 之少数派插件 得益于 PicGo 的插件系统，我们可以为少数派平台编写插件，快捷完成图片上传到少数派的服务器。那么，如何安装少数派插件？
步骤一
首先我们打开 PicGo 配置文件所在的目录，你可以点击上图的 Open Config File 按钮，或者手动打开对应平台的文件夹。</description></item><item><title>Microsoft Terminal 颜值在线的终端模拟器</title><link>https://blog.wsine.top/posts/beautiful-microsoft-terminal/</link><pubDate>Mon, 09 Dec 2019 00:00:00 +0000</pubDate><guid>https://blog.wsine.top/posts/beautiful-microsoft-terminal/</guid><description>在 Microsoft Build 2019 的大会上，微软给我们带来了一款全新设计的终端模拟器 Microsoft Terminal. 虽然过度好看的宣传片和实际的效果有着巨大的落差，但是也不影响它在 Windows 阵营里取得最高的颜值称号。
从 Preview v0.2 版本开始我就试用了这款工具，到今天的 Preview v0.6 版本最后关键的问题修复后我才想说来跟大家分享一下这个工具。
安装 Terminal Microsoft Terminal （下称 Terminal） 明确要求了系统版本至少需要 “Windows 10 version 18362” 或以上才能使用。
而现在的安装方法也很简单，从 Microsoft Store 里面搜索 “Microsoft Terminal” 就可以直接安装和卸载了。
但是到目前为止，Terminal 还是处于一个 Preview 的阶段，功能上来说不会囊括所有的用户的期望，如果想要有自己期望的功能，可以在官方的开源仓库的 Github issue 上发 Feature Request 哟~
全新配置管理方式 Terminal 采用了 JSON 文件作为它的配置文件，这就意味着你可以将整个配置文件备份，然后在别的地方下载下来快速使用，十分的方便。
实际使我眼前一亮的点是，当我用 Sublime 修改该配置文件保存的时候，已经打开了的 Terminal 的样式能实时发生改变，这大大提高了用户调整配置的便捷程度，而很多工具要做到这点都是将设置界面做成软件的一部分才能实现的，这点给 Terminal 大大的加分。
由于是 JSON 纯文本配置文件，总是有可能出现手抖或者配置出错的问题，这时候保存配置文件会被提示文件哪里的配置有问题，而该次的保存不会生效，实际调试样式还是十分方便的。
Less is More 的配置项 Terminal 提供的配置项不多，但我觉得 98% 的人也只需要修改到这些配置项就足够了，下面来跟大家陈列一下它提供的配置项吧（我只挑重点的来展示）：
defaultProfile：默认启动的方案，可以为 CMD，PowerShell，Azure 等 keybindings：快捷键映射 acrylic：透明度 background：背景颜色或者背景图片 动漫女神 colorScheme：配色方案，可以自定义配色 commandline：默认启动的程序，一般为 cmd.</description></item><item><title>Chrome在Windows找回熟悉的Alt + Num切换标签页</title><link>https://blog.wsine.top/posts/alt-num-switch-tab-in-chrome-on-windows/</link><pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.wsine.top/posts/alt-num-switch-tab-in-chrome-on-windows/</guid><description>在不同的系统和软件中，我都喜欢尽可能用同一套快捷键方案去完成相同的功能，以减少自己的学习和记忆成本，最大化效率。但是，哪怕是同一个应用，由于不同平台的默认快捷键不一样，频繁切换平台的迁移学习也很辛苦。
比如 Chrome 浏览器中，切换标签页的方式在不同的平台上不一样：
Windows：Ctrl + Num Linux：Alt + Num Mac：Cmd + Num 后两者由于键位所处的位置大致相同，所以哪怕没有记忆也不会造成多大的割裂感。但是，Windows 下面的这套快捷键实在是太难受了，本文就是教你如何找回熟悉的感觉。
这里我们需要借助的软件是 Vimium，相信已经有不少文章介绍过它了。在这里我们需要用到它 Custom key mappings 的功能。Vimium 本身提供很多优秀的内建功能。而我们这里需要用到的是 firstTab 的功能。
你可能会觉得这个功能并不足够完成 Alt + 2或 Alt + 3 等映射，其实不然，仔细阅读它的开源代码你会发现它本身还提供 option 的功能，简单点来说配置方案是酱紫的。
这里我把映射也一并附上。我个人只习惯用前面几个固定的标签页，你可以根据自己习惯增减。
map &amp;lt;a-1&amp;gt; firstTab map &amp;lt;a-2&amp;gt; firstTab count=2 map &amp;lt;a-3&amp;gt; firstTab count=3 map &amp;lt;a-4&amp;gt; firstTab count=4 有了这套方案，我可以很容易的快速回到长期放在第一个标签的 Gmail 页面或者从 Jupyter Notebook 的编程页面中跳出去快速搜索一些东西，而不用借助鼠标，从而提高效率。</description></item></channel></rss>